#lang racket/base

(require rackunit
         "interpreter.rkt")

(check-equal? (interpret "tests/test1.txt") 150 "test1")
(check-equal? (interpret "tests/test2.txt") -4 "test2")
(check-equal? (interpret "tests/test3.txt") 10 "test3")
(check-equal? (interpret "tests/test4.txt") 16 "test4")
(check-equal? (interpret "tests/test5.txt") 220 "test5")
(check-equal? (interpret "tests/test6.txt") 5 "test6")
(check-equal? (interpret "tests/test7.txt") 6 "test7")
(check-equal? (interpret "tests/test8.txt") 10 "test8")
(check-equal? (interpret "tests/test9.txt") 5 "test9")
(check-equal? (interpret "tests/test10.txt") -39 "test10")
(check-equal? (interpret "tests/test11.txt") error "test11")
(check-equal? (interpret "tests/test12.txt") error "test12")
(check-equal? (interpret "tests/test13.txt") error "test13")
(check-equal? (interpret "tests/test14.txt") error "test14")
(check-equal? (interpret "tests/test15.txt") 'true "test15")
(check-equal? (interpret "tests/test16.txt") 100 "test16")
(check-equal? (interpret "tests/test17.txt") 'false "test17")
(check-equal? (interpret "tests/test18.txt") 'true "test18")
(check-equal? (interpret "tests/test19.txt") 128 "test19")
(check-equal? (interpret "tests/test20.txt") 12 "test20")
(check-equal? (interpret "tests/test21.txt") 30 "test21")
(check-equal? (interpret "tests/test22.txt") 11 "test22")
(check-equal? (interpret "tests/test23.txt") 1106 "test23")
(check-equal? (interpret "tests/test24.txt") 12 "test24")
(check-equal? (interpret "tests/test25.txt") 16 "test25")
(check-equal? (interpret "tests/test26.txt") 72 "test26")
(check-equal? (interpret "tests/test27.txt") 21 "test27")
(check-equal? (interpret "tests/test28.txt") 164 "test28")
